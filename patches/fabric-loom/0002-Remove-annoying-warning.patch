From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jason Penilla <11360596+jpenilla@users.noreply.github.com>
Date: Thu, 1 Jul 2021 20:46:20 -0700
Subject: [PATCH] Remove annoying warning


diff --git a/src/main/java/net/fabricmc/loom/configuration/providers/mappings/mojmap/MojangMappingLayer.java b/src/main/java/net/fabricmc/loom/configuration/providers/mappings/mojmap/MojangMappingLayer.java
index cd37bc01b039f018aefa292cf4be7d2a9c2a053f..2aafc5c9b149bebf1a3d5d1cc3a2b8a1c26dd9b7 100644
--- a/src/main/java/net/fabricmc/loom/configuration/providers/mappings/mojmap/MojangMappingLayer.java
+++ b/src/main/java/net/fabricmc/loom/configuration/providers/mappings/mojmap/MojangMappingLayer.java
@@ -48,7 +48,6 @@ public record MojangMappingLayer(Path clientMappings, Path serverMappings, boole
 
 	@Override
 	public void visit(MappingVisitor mappingVisitor) throws IOException {
-		printMappingsLicense(clientMappings);
 
 		// Filter out field names matching the pattern
 		DstNameFilterMappingVisitor nameFilter = new DstNameFilterMappingVisitor(mappingVisitor, SYNTHETIC_NAME_PATTERN);
@@ -63,24 +62,6 @@ public record MojangMappingLayer(Path clientMappings, Path serverMappings, boole
 		}
 	}
 
-	private void printMappingsLicense(Path clientMappings) {
-		try (BufferedReader clientBufferedReader = Files.newBufferedReader(clientMappings, StandardCharsets.UTF_8)) {
-			logger().warn("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
-			logger().warn("Using of the official minecraft mappings is at your own risk!");
-			logger().warn("Please make sure to read and understand the following license:");
-			logger().warn("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
-			String line;
-
-			while ((line = clientBufferedReader.readLine()).startsWith("#")) {
-				logger().warn(line);
-			}
-
-			logger().warn("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
-		} catch (IOException e) {
-			throw new RuntimeException("Failed to read client mappings", e);
-		}
-	}
-
 	@Override
 	public MappingsNamespace getSourceNamespace() {
 		return MappingsNamespace.OFFICIAL;
